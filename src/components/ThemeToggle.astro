---
---

<button id="theme-toggle" aria-label="Toggle dark mode" class="fixed top-4 right-4 p-2 rounded-full bg-color-button-bg text-color-button-text z-50 transition-all">
  <svg xmlns="http://www.w3.org/2000/svg" class="icon-light h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
    <path fill-rule="evenodd" d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z" clip-rule="evenodd" />
  </svg>
  <svg xmlns="http://www.w3.org/2000/svg" class="icon-dark h-5 w-5 hidden" viewBox="0 0 20 20" fill="currentColor">
    <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z" />
  </svg>
</button>

<script>
  // Theme toggle functionality
  const themeToggle = document.getElementById('theme-toggle');
  const htmlElement = document.documentElement;
  const iconLight = document.querySelector('.icon-light');
  const iconDark = document.querySelector('.icon-dark');
  
  // Check for saved theme preference or use default
  const getTheme = (): 'light' | 'dark' => (localStorage.getItem('theme') as 'light' | 'dark') || 'dark';
  
  // Apply theme by updating CSS variables
  const applyTheme = (theme: 'light' | 'dark'): void => {
    const root = document.documentElement;
    if (theme === 'light') {
      root.style.setProperty('--color-background', 'var(--color-background-light)');
      root.style.setProperty('--color-text-primary', 'var(--color-text-primary-light)');
      root.style.setProperty('--color-text-secondary', 'var(--color-text-secondary-light)');
      root.style.setProperty('--color-button-bg', 'var(--color-button-bg-light)');
      root.style.setProperty('--color-button-text', 'var(--color-button-text-light)');
      root.style.setProperty('--color-border', 'var(--color-border-light)');
      root.style.setProperty('--color-accent', 'var(--color-accent-light)');
      iconLight?.classList.add('hidden');
      iconDark?.classList.remove('hidden');
    } else {
      root.style.setProperty('--color-background', 'var(--color-background-dark)');
      root.style.setProperty('--color-text-primary', 'var(--color-text-primary-dark)');
      root.style.setProperty('--color-text-secondary', 'var(--color-text-secondary-dark)');
      root.style.setProperty('--color-button-bg', 'var(--color-button-bg-dark)');
      root.style.setProperty('--color-button-text', 'var(--color-button-text-dark)');
      root.style.setProperty('--color-border', 'var(--color-border-dark)');
      root.style.setProperty('--color-accent', 'var(--color-accent-dark)');
      iconLight?.classList.remove('hidden');
      iconDark?.classList.add('hidden');
    }
    localStorage.setItem('theme', theme);
  };
  
  // Initialize theme
  applyTheme(getTheme());
  
  // Toggle theme on click
  themeToggle?.addEventListener('click', () => {
    const currentTheme = getTheme();
    const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
    applyTheme(newTheme);
  });
</script>
