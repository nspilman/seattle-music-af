---
---

<div class="typing-container">
  <h1 id="typed-heading" class="text-[1.6rem] md:text-[2.2rem] font-bold text-center mb-3 leading-tight text-color-text-primary whitespace-nowrap"></h1>
</div>

<style>
  .typing-container {
    display: flex;
    justify-content: center;
    min-height: 5rem;
    width: 100%;
    max-width: 100%;
    padding: 0 1rem;
  }
  
  #typed-heading {
    position: relative;
  }
  
  #typed-heading::after {
    content: "|";
    position: absolute;
    right: -8px;
    animation: blink 0.7s infinite;
  }
  
  @keyframes blink {
    0%, 100% { opacity: 1; }
    50% { opacity: 0; }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const typedHeading = document.getElementById('typed-heading') as HTMLHeadingElement;
    
    // Safety check to ensure element exists
    if (!typedHeading) {
      console.error('Typed heading element not found');
      return;
    }
    
    const phrases = ['Seattle Music Artist Foundry', '#SeattleMusicAF'];
    let currentPhraseIndex = 0;
    let currentCharIndex = 0;
    let isDeleting = false;
    let typingSpeed = 100;
    let pauseTime = 1500;
    
    function typeText() {
      const currentPhrase = phrases[currentPhraseIndex];
      
      if (isDeleting) {
        // Deleting text
        typedHeading.textContent = currentPhrase.substring(0, currentCharIndex - 1);
        currentCharIndex--;
        typingSpeed = 50; // Faster when deleting
      } else {
        // Typing text
        typedHeading.textContent = currentPhrase.substring(0, currentCharIndex + 1);
        currentCharIndex++;
        typingSpeed = 100; // Normal speed when typing
      }
      
      // Check if we're done typing the current phrase
      if (!isDeleting && currentCharIndex === currentPhrase.length) {
        // Pause at the end of typing
        isDeleting = true;
        typingSpeed = pauseTime;
      } 
      // Check if we're done deleting the current phrase
      else if (isDeleting && currentCharIndex === 0) {
        isDeleting = false;
        currentPhraseIndex = (currentPhraseIndex + 1) % phrases.length;
      }
      
      setTimeout(typeText, typingSpeed);
    }
    
    // Start the typing animation
    typeText();
  });
</script>
